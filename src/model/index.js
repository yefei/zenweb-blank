'use strict';
// zenorm auto generate
// This file is automatically generated
// Please do not modify
// date: 2022-1-10 7:51:10 ├F10: PM┤
// user: yefei@unknown
// database: test
/**
 * @typedef {import('zenorm').Query} Query
 */

const { Model } = require('zenorm');

const MessageOption = { name: 'message', table: 'message', pk: 'id' };
/** @type { import('./index').MessageQuery } */
exports.MessageQuery = query => new Model(MessageOption, query);

const NonautopkOption = { name: 'nonautopk', table: 'nonautopk', pk: 'id' };
/** @type { import('./index').NonautopkQuery } */
exports.NonautopkQuery = query => new Model(NonautopkOption, query);

const ProfileOption = { name: 'profile', table: 'profile', pk: 'id' };
/** @type { import('./index').ProfileQuery } */
exports.ProfileQuery = query => new Model(ProfileOption, query);

const UserOption = { name: 'user', table: 'user', pk: 'id' };
/** @type { import('./index').UserQuery } */
exports.UserQuery = query => new Model(UserOption, query);

class Queries {
  /**
   * @param {Query} query
   */
  constructor(query) { this._query = query; }
  get message() { return exports.MessageQuery(this._query); }
  get nonautopk() { return exports.NonautopkQuery(this._query); }
  get profile() { return exports.ProfileQuery(this._query); }
  get user() { return exports.UserQuery(this._query); }
}
exports.Queries = Queries;

/**
 * @param {Query} query
 */
exports.queries = function(query) { return new Queries(query); };

/* options update */
function loadModelOption(c, p) { try { require.resolve(p); } catch (e) { return; } Object.assign(c, require(p)); }
loadModelOption(MessageOption, '../../models_options/message');
loadModelOption(NonautopkOption, '../../models_options/nonautopk');
loadModelOption(ProfileOption, '../../models_options/profile');
loadModelOption(UserOption, '../../models_options/user');
